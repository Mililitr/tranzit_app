// Mocks generated by Mockito 5.4.4 from annotations
// in tranzit_app/test/presentation/bloc/settings/settings_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tranzit_app/core/errors/failures.dart' as _i6;
import 'package:tranzit_app/core/usecases/usecase.dart' as _i8;
import 'package:tranzit_app/domain/entities/settings.dart' as _i7;
import 'package:tranzit_app/domain/repositories/settings_repository.dart'
    as _i2;
import 'package:tranzit_app/domain/usecases/settings/get_settings.dart' as _i4;
import 'package:tranzit_app/domain/usecases/settings/save_settings.dart' as _i9;
import 'package:tranzit_app/domain/usecases/settings/update_theme.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSettingsRepository_0 extends _i1.SmartFake
    implements _i2.SettingsRepository {
  _FakeSettingsRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSettings extends _i1.Mock implements _i4.GetSettings {
  MockGetSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSettingsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SettingsRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Settings>> call(
          _i8.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Settings>>.value(
            _FakeEither_1<_i6.Failure, _i7.Settings>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.Settings>>);
}

/// A class which mocks [SaveSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveSettings extends _i1.Mock implements _i9.SaveSettings {
  MockSaveSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSettingsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SettingsRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> call(_i9.SettingsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}

/// A class which mocks [UpdateTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateTheme extends _i1.Mock implements _i10.UpdateTheme {
  MockUpdateTheme() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSettingsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SettingsRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> call(_i10.ThemeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
